name: Update Public Suffix List
on: [push]

env:
  LC_ALL: "en_US.UTF-8"

jobs:
  update-psl:
    if: github.repository == 'line/armeria'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas
          pip install numpy
      - run: sudo apt update
      - run: sudo apt install inotify-tools
      - run: inotifywait -mr /home/runner/work --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/test.csv & echo 'basak'
      - uses: jannekem/run-python-script-action@v1
        with:
          script: |
            import pandas as pd
            import numpy as np
            df = pd.read_csv('/home/runner/test.csv', sep = ';', names=['time', 'watched_filename', 'event_filename', 'event_name'])
            df['event_filename'] = df['event_filename'].replace(np.nan, '')
            steps = {}
            starting_indexes = df[(df['event_filename'].str.contains('starting_')) & (df['event_name'] == 'CREATE')].index.to_list() + [df.shape[0]]
            ending_indexes = [0] + df[(df['event_filename'].str.contains('starting_')) & (df['event_name'] == 'CLOSE_WRITE,CLOSE')].index.to_list()
            starting_df = df[df['event_filename'].str.contains('starting_')]
            touch_file_names = ['setup'] + [x.replace('starting_', '') for x in starting_df['event_filename'].value_counts().index.to_list()]
            for starting_index, ending_index, touch_file_name in zip(starting_indexes, ending_indexes, touch_file_names):
                steps[touch_file_name] = (ending_index, starting_index)
            df['watched_filename'] = df['watched_filename'] + df['event_filename']
            df.drop('event_filename', axis=1, inplace=True)
            df.rename(columns={'watched_filename':'file_name'}, inplace=True)
            modify_df = df[df['event_name'] == 'MODIFY']
            file_names = modify_df['file_name'].value_counts().index.to_list()
            info = []
            for file_name in file_names:
                last_access_step = ''
                last_modify_step = ''
                creation_step = ''
                if df[(df['file_name'] == file_name) & (df['event_name'] == 'MODIFY')].shape[0] == 0: continue
                last_modify_index = df[(df['file_name'] == file_name) & (df['event_name'] == 'MODIFY')].index.to_list()[-1]
                last_access_index = 0
                if df[(df['file_name'] == file_name) & (df['event_name'] == 'ACCESS')].shape[0] > 0:
                    last_access_index = df[(df['file_name'] == file_name) & (df['event_name'] == 'ACCESS')].index.to_list()[-1]
                else:
                    last_access_index = -1
                    last_access_step = 'Not provided'
                if last_access_index < last_modify_index:
                    try:
                        creation_index = df[(df['file_name'] == file_name) & (df['event_name'] == 'CREATE')].index.to_list()[0]
                    except:
                        creation_index = -1
                        creation_step = 'Not provided'
                    for touch_file_name, (starting_index, ending_index) in steps.items():
                        if (last_access_index > starting_index) & (last_access_index < ending_index):
                            last_access_step = touch_file_name if touch_file_name == 'setup' else touch_file_name.split('_')[1]
                        if (last_modify_index > starting_index) & (last_modify_index < ending_index):
                            last_modify_step = touch_file_name if touch_file_name == 'setup' else touch_file_name.split('_')[1]
                        if (creation_index > starting_index) & (creation_index < ending_index):
                            creation_step = touch_file_name if touch_file_name == 'setup' else touch_file_name.split('_')[1]
                    info.append({'file_name': file_name, 'last_access_index': last_access_index, 'last_modify_index': last_modify_index, 'creation_index': creation_index, 'last_access_step':last_access_step , 'last_modify_step':last_modify_step, 'creation_step': creation_step})
            info_df = pd.DataFrame(info)
            info_df.to_csv('/home/runner/info.csv')
            os.mkdir('optimizing-ci-builds-ci-analysis')
            info_df.to_csv('/home/runner/work/armeria/armeria/optimizing-ci-builds-ci-analysis/analysis.csv')
      - name: Pushes analysis to another repository
        id: push_directory
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: 'optimizing-ci-builds-ci-analysis'
          destination-github-username: 'optimizing-ci-builds'
          destination-repository-name: 'ci-analyzes'
          target-directory: 'armeria/.github/workflows/public-suffixes/update-psl'
      - run: touch starting_update-psl_actionscheckout@v2_14
      - uses: actions/checkout@v2

      - id: setup-jdk-17
        name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - run: touch starting_update-psl_RestoreGradleCache_23
      - name: Restore Gradle Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/wrapper/dists
            ~/.gradle/caches/jars-3
            ~/.gradle/caches/modules-2
            ~/.gradle/caches/package-lists
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - run: touch starting_update-psl_BuildwithGradle_35
      - name: Build with Gradle
        run: |
          ./gradlew --no-daemon --stacktrace :core:publicSuffixes

      - run: touch starting_update-psl_ImportGPGkey_39
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSWORD }}
          git-user-signingkey: true
          git-commit-gpgsign: true

      - run: touch starting_update-psl_Pushupdatedpublicsuffixlist_48
      - name: Push updated public suffix list
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_options: '-S'
          commit_message: Update public suffix list
          file_pattern: core/src/main/resources/com/linecorp/armeria/public_suffixes.txt
          commit_user_name: Meri Kim
          commit_user_email: dl_armeria@linecorp.com
          commit_author: Meri Kim <dl_armeria@linecorp.com>

      - run: touch starting_update-psl_CleanupGradleCache_58
      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock || true
          rm -f ~/.gradle/caches/modules-2/gc.properties || true
        shell: bash

